//------------------------------------------------------------------------------
//  shaders.shd
//  Annotated GLSL shaders for SimpleRenderTarget sample
//------------------------------------------------------------------------------

@uniform_block vsParams VSParams
mat4 mvp ModelViewProjection
@end

@texture_block textures Textures
sampler2D tex Texture
@end

//------------------------------------------------------------------------------
//  Vertex and fragment shaders for rendering into the offscreen render target
//
@vs offscreenVS
@use_uniform_block vsParams
@in vec4 position
@in vec4 normal
@out vec4 nrm
    gl_Position = vsParams.mvp * position;
    nrm = normal;
@end

@fs offscreenFS
@in vec4 nrm
    gl_FragColor = vec4(nrm.xyz * 0.5 + 0.5, 1.0);
@end

@program OffscreenShader offscreenVS offscreenFS

//------------------------------------------------------------------------------
//  Vertex and fragment shaders for rendering into the frame buffer.
//
@vs displayVS
@use_uniform_block vsParams
@in vec4 position
@in vec4 normal
@in vec2 texcoord0
@out vec2 uv
@out vec4 nrm
    gl_Position = vsParams.mvp * position;
    uv = texcoord0;
    nrm = normalize(vsParams.mvp * normal);
@end

@fs displayFS
@use_texture_block textures
@in vec2 uv
@in vec4 nrm
    vec4 c = texture(tex, uv * vec2(20.0, 10.0));
    float l = clamp(dot(nrm.xyz, normalize(vec3(1.0, 1.0, -1.0))), 0.0, 1.0) * 2.0;
    gl_FragColor = vec4(c.xyz * (l + 0.25), 1.0);
@end

@program DisplayShader displayVS displayFS

